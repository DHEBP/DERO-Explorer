({
name: 'blocks',
version: '2.1.0',

// Module references
blocksList: null,
blocksDetails: null,

async initModules() {
    if (!this.blocksList) {
        this.blocksList = await window.lm('blocks-list');
    }
    if (!this.blocksDetails) {
        this.blocksDetails = await window.lm('blocks-details');
    }
},

async renderBlocksExplorer(x) {
    // Check connection before attempting to load
    if (!x || !window.xswd || !window.xswd.isConnected) {
        if (window.updateAllStatusIndicators) {
            window.updateAllStatusIndicators('disconnected');
        }
        return '<div class="enhanced-card"><div class="card-header"><h2 style="color: #ef4444; font-size: 1.6rem; font-weight: 700; margin: 0;">ðŸš« Connection Required</h2></div><div class="card-content"><div style="background: rgba(239,68,68,0.1); border: 1px solid rgba(239,68,68,0.3); border-radius: 8px; padding: 2rem; text-align: center; border-left: 4px solid #ef4444;"><div style="color: #ef4444; font-size: 1.1rem; font-weight: 600; margin-bottom: 1rem;">XSWD Connection Required</div><div style="color: #b3b3b3; font-size: 0.9rem; margin-bottom: 1.5rem;">Unable to load blocks without connection to DERO daemon</div><button onclick="window.reconnectXSWD?.()" style="background: rgba(239,68,68,0.1); border: 1px solid #ef4444; color: #ef4444; padding: 0.75rem 1.5rem; border-radius: 6px; cursor: pointer; font-weight: 500;">ðŸ”„ Reconnect</button></div></div></div>';
    }
    
    await this.initModules();
    if (this.blocksList) {
        return this.blocksList.renderBlocksExplorer(x);
    }
    return '<div class="card"><div class="error-card"><h3>Error</h3><p>Failed to load blocks list module</p></div></div>';
},

async renderBlock(blockHeight, x) {
    await this.initModules();
    if (this.blocksDetails) {
        return this.blocksDetails.renderBlock(blockHeight, x);
    }
    return '<div class="card"><div class="error-card"><h3>Error</h3><p>Failed to load block details module</p></div></div>';
},

async renderRecentBlocksList(x, h, c = 15) {
    await this.initModules();
    if (this.blocksDetails) {
        return this.blocksDetails.renderRecentBlocksList(x, h, c);
    }
    return '<tr><td colspan="6" style="text-align:center;padding:2rem;color:var(--text-secondary)">Failed to load blocks module</td></tr>';
},

async loadBlocksPage(page, xswdCall) {
    await this.initModules();
    if (this.blocksList) {
        return this.blocksList.loadBlocksPage(page, xswdCall);
    }
},

// Global function exports for backwards compatibility
async loadMoreBlocks(xswdCall) {
    await this.initModules();
    if (this.blocksList && this.blocksList.loadMoreBlocks) {
        return this.blocksList.loadMoreBlocks(xswdCall);
    }
},

formatAge(seconds) {
    if (isNaN(seconds) || seconds < 0 || seconds > 31536000) return '0s';
    
    if (seconds < 60) return Math.floor(seconds) + 's';
    if (seconds < 3600) return Math.floor(seconds / 60) + 'm';
    if (seconds < 86400) return Math.floor(seconds / 3600) + 'h';
    return Math.floor(seconds / 86400) + 'd';
}
})